{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","idx","this","squares","content","i","sub_content","j","push","renderSquare","class","React","Component","Game","state","history","Array","fill","instanceNumber","nextIsX","inst_num","setState","slice","length","declareWinner","concat","status","board","winner","instances","map","rollbackTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kOAIA,SAASA,EAAOC,GACd,OACE,wBACEC,UAAU,SACVC,QAASF,EAAME,QAFjB,SAIKF,EAAMG,Q,IAKTC,E,kKACJ,SAAaC,GAAK,IAAD,OACf,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKxC,WAEE,IADA,IAAIG,EAAU,GACNC,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAElB,IADA,IAAIC,EAAc,GACVC,EAAE,EAAEA,EAAE,EAAEA,IACdD,EAAYE,KAAKN,KAAKO,aAAgB,EAAFJ,EAAKE,IAE3CH,EAAQI,KAAK,qBAAKE,MAAM,YAAX,SAAwBJ,KAGvC,OACE,8BAAMF,Q,GArBQO,IAAMC,WA4BpBC,E,kDACJ,WAAYjB,GAAO,IAAD,8BAChB,cAAMA,IACDkB,MAAQ,CACXC,QAAS,CAAC,CACRZ,QAASa,MAAM,GAAGC,KAAK,QAEzBC,eAAgB,EAChBC,SAAS,GAPK,E,8CAWlB,SAAWC,GACTlB,KAAKmB,SAAS,CACZN,QAASb,KAAKY,MAAMC,QAAQO,MAAM,EAAGF,EAAS,GAC9CF,eAAgBE,EAChBD,QAAUC,EAAS,GAAK,M,yBAI5B,SAAYnB,GACV,IAAIc,EAAUb,KAAKY,MAAMC,QAErBZ,EADQY,EAAQA,EAAQQ,OAAO,GACfpB,QAAQmB,QAEzBnB,EAAQF,IAAQuB,EAAcrB,KAGjCA,EAAQF,GAAOC,KAAKY,MAAMK,QAAU,IAAM,IAC1CjB,KAAKmB,SAAS,CACZN,QAASA,EAAQU,OAAO,CAAC,CACvBtB,QAASA,KAEXe,eAAgBH,EAAQQ,OACxBJ,SAAUjB,KAAKY,MAAMK,a,oBAIzB,WAAU,IAIJO,EAJG,OACHX,EAAUb,KAAKY,MAAMC,QACrBY,EAAQZ,EAAQb,KAAKY,MAAMI,gBAC3BU,EAASJ,EAAcG,EAAMxB,SAG/BuB,EADCE,EACQA,EAAS,SAGR1B,KAAKY,MAAMK,QAAU,IAAM,KAAO,UAE9C,IAAIU,EAAYd,EAAQO,MAAM,EAAGP,EAAQQ,OAAO,GAAGO,KAAI,SAAC3B,EAASF,GAC/D,IAAMG,EAAU,gBAAkBH,EAAM,SAASA,EAAM,aACvD,OACE,6BACE,wBAAQH,QAAS,kBAAM,EAAKiC,WAAW9B,IAAvC,SACGG,KAFIH,MAQb,OACE,sBAAKJ,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASwB,EAAMxB,QACfL,QAAS,SAACG,GAAD,OAAS,EAAK+B,YAAY/B,QAGvC,sBAAKJ,UAAU,YAAf,UACE,8BAAM6B,IACN,6BAAKG,c,GAtEIlB,IAAMC,WA6EzB,SAASY,EAAcrB,GAWrB,IAVA,IAAM8B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMV,OAAQlB,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B6B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjC,EAAQ+B,IAAM/B,EAAQ+B,KAAO/B,EAAQgC,IAAMhC,EAAQ+B,KAAO/B,EAAQiC,GACpE,OAAOjC,EAAQ+B,GAGnB,OAAO,KAKTG,IAASC,OACP,cAACzB,EAAD,IACA0B,SAASC,eAAe,W","file":"static/js/main.8fba3c33.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n    >\n        {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(idx){\n    return (\n      <Square\n        value={this.props.squares[idx]}\n        onClick={() => this.props.onClick(idx)}\n      />\n    );\n  }\n\n  render() {\n    let content = [];\n    for(let i=0;i<3;i++){\n      let sub_content = [];\n      for(let j=0;j<3;j++){\n        sub_content.push(this.renderSquare((i*3)+j));\n      }\n      content.push(<div class=\"board-row\">{sub_content}</div>);\n    }\n\n    return (\n      <div>{content}</div>\n    );\n\n  }\n}\n\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      instanceNumber: 0,\n      nextIsX: true,\n    };\n  }\n\n  rollbackTo(inst_num){\n    this.setState({\n      history: this.state.history.slice(0, inst_num+1),\n      instanceNumber: inst_num,\n      nextIsX: (inst_num%2 == 0),\n    })\n  }\n\n  handleClick(idx){\n    let history = this.state.history;\n    let board = history[history.length-1];\n    let squares = board.squares.slice();\n\n    if(squares[idx] || declareWinner(squares)){\n      return;\n    }\n    squares[idx] = this.state.nextIsX ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      instanceNumber: history.length,\n      nextIsX: !this.state.nextIsX,\n    });\n  }\n\n  render() {\n    let history = this.state.history;\n    let board = history[this.state.instanceNumber];\n    let winner = declareWinner(board.squares);\n    let status;\n    if(winner){\n      status = winner + \" Won!\";\n    }\n    else{\n      status = (this.state.nextIsX ? 'X' : 'O') + \"'s turn\";\n    }\n    let instances = history.slice(0, history.length-1).map((squares, idx) => {\n      const content = \"Rollback to \" + (idx ? \"move #\"+idx : \"beginning\");\n      return (\n        <li key={idx}>\n          <button onClick={() => this.rollbackTo(idx)}>\n            {content}\n          </button>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={board.squares}\n            onClick={(idx) => this.handleClick(idx)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{instances}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction declareWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}